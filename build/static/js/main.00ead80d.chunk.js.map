{"version":3,"sources":["components/Home/home.js","components/Navbar/Nav.js","components/Forms/Login.js","components/Forms/Register.js","components/UserProfile/UserProfile.js","components/HackerList/HackersList.js","components/HackerDetails/HackerDetail.js","services/authProvider.js","services/userList.js","services/dataProvider.js","components/Statistics/Statistics.js","App.js","serviceWorker.js","index.js"],"names":["home","id","href","className","Nav","useState","localStorage","getItem","userLogIn","setUserLogIn","username","setUserName","history","useHistory","Fragment","to","onClick","axios","get","then","response","console","log","data","status","removeItem","push","Login","setUsername","password","setPassword","loggedIn","setLoggedIn","error","setError","errorMsg","setErrorMsg","useEffect","rel","onSubmit","f","preventDefault","userData","post","user","setItem","token","catch","err","onChange","e","target","value","autoFocus","required","type","name","Register","email","setEmail","ph","setPh","registered","setRegistered","res","register","pattern","autoComplete","minLength","UserProfile","props","userImg","img","userName","userRank","rank","key","src","HackersList","hackerList","setHackerList","top3HackerList","setTop3HackerList","authenticate","setAuthenticate","fetchHackerList","fetchTop3Hackers","limit","headers","map","topHacker","index","profileLink","_id","overallRank","hacker","HackerDetail","useParams","hackerId","hackerData","setHackerData","makeNetworkCall","location","education","followers","following","challengesSolved","authProvider","login","request","Request","method","body","JSON","stringify","admin","Headers","fetch","Error","statusText","json","auth","checkError","Promise","reject","resolve","checkAuth","logout","getIdentity","parse","userId","getPermissions","userList","List","Datagrid","rowClick","TextField","source","NumberField","apiUrl","httpClient","fetchUtils","fetchJson","getList","resource","params","pagination","page","perPage","sort","url","field","order","tempArr","singleData","ind","tempObj","total","length","getOne","getMany","query","filter","ids","getManyReference","range","parseInt","split","pop","update","updateMany","create","delete","deleteMany","Statistics","top10HackerData","setTop10HackerData","updatedHackerDetail","setUpdatedHackerDetail","CPPData","setCPPData","deviceData","setDeviceData","fetchTopHackers","fetchRecentlyUpdatedDetails","userArr","cppArr","usernameArr","a","b","competitivePercentiles","cpp","singleUser","deviceType","state","labels","datasets","label","backgroundColor","hoverBackgroundColor","fill","borderColor","lineTension","mapUserData","options","title","display","text","fontSize","fontColor","legend","position","scaleFontColor","latestUpdated","App","path","exact","component","Home","Admin","dataProvider","Resource","list","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.00ead80d.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction home() {\r\n  return (\r\n    <div>\r\n      <div id=\"landing-header\">\r\n        <h1>Welcome to HackerRank!</h1>\r\n        <a href=\"/hacker-list\" className=\"btn btn-lg btn-success\">Go to Hackers Dashboard!</a>\r\n      </div>\r\n\r\n      <ul className=\"slideshow\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default home\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst Nav = () => {\r\n\r\n\tlet [userLogIn, setUserLogIn] = useState(localStorage.getItem('loggedIn'))\r\n\tlet [username, setUserName] = useState(localStorage.getItem('userName'))\r\n\tconst history = useHistory()\r\n\r\n\r\n\tconst _logout = () => {\r\n\t\taxios.get(\"http://localhost:3001/logout\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data)\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalStorage.removeItem('loggedIn');\r\n\t\t\t\t\t\tlocalStorage.removeItem('userName');\r\n\t\t\t\t\t\tlocalStorage.removeItem('token');\r\n\t\t\t\t\t\thistory.push(\"/login\")\r\n\t\t\t\t\t\tsetUserLogIn(false)\r\n\t\t\t\t\t\tsetUserName(false)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment >\r\n\t\t\t{\r\n\t\t\t\tuserLogIn ?\r\n\t\t\t\t\t<div className=\"navbar-default\">\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"floatLeft header\">\r\n\t\t\t\t\t\t\t\t<Link to='/'>Hacker-Ranking</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"collapse navbar-collapse\">\r\n\t\t\t\t\t\t\t\t<div className=\"floatRight flexRow\">\r\n\t\t\t\t\t\t\t\t\t{/* <li></li> */}\r\n\t\t\t\t\t\t\t\t\t<div><Link to=\"/hacker/statistics\">Hacker Statistics</Link></div>\r\n\t\t\t\t\t\t\t\t\t<div><Link to=\"#\">Logged In as {username}</Link></div>\r\n\t\t\t\t\t\t\t\t\t<div ><Link to=\"#\" onClick={_logout}>LogOut</Link></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\r\n\t\t\t\t\t<div className=\"navbar-default\">\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"floatLeft header\">\r\n\t\t\t\t\t\t\t\t<Link to='/'>Hacker-Ranking</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"collapse navbar-collapse\">\r\n\t\t\t\t\t\t\t\t<div className=\"floatRight flexRow\">\r\n\t\t\t\t\t\t\t\t\t<div><Link to=\"/login\">Log In</Link></div>\r\n\t\t\t\t\t\t\t\t\t<div><Link to=\"/admin-panel\">Log In As Admin</Link></div>\r\n\t\t\t\t\t\t\t\t\t<div><Link to=\"/register\">Sign Up</Link></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t}\r\n\t\t</React.Fragment >\r\n\r\n\r\n\t)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect, Component } from 'react'\r\nimport axios from 'axios'\r\nimport {  Redirect } from 'react-router-dom'\r\nimport Nav from '../Navbar/Nav'\r\n\r\n\r\nfunction Login() {\r\n  let [username, setUsername] = useState(\"\")\r\n  let [password, setPassword] = useState(\"\")\r\n  let [loggedIn, setLoggedIn] = useState(false)\r\n  let [error, setError] = useState(false)\r\n  let [errorMsg, setErrorMsg] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(loggedIn)\r\n  }, [loggedIn])\r\n\r\n  const login = (f) => {\r\n    f.preventDefault()\r\n    console.log(\"log in details\", username)\r\n    let userData = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    axios.post(\"http://localhost:3001/login\", userData)\r\n      .then(response => {\r\n\r\n        if (response.data.user === false) {\r\n          setError(true)\r\n          setErrorMsg(\"Wrong Email or Password\")\r\n        }\r\n        else {\r\n          localStorage.setItem('loggedIn', true);\r\n          localStorage.setItem('userName', response.data.user.username);\r\n          localStorage.setItem('token', response.data.token);\r\n          setError(false)\r\n          setErrorMsg(null)\r\n          return setLoggedIn(true)\r\n        }\r\n\r\n      }).catch(err => {\r\n        setError(true)\r\n        setErrorMsg(\"Wrong Email or Password\")\r\n      })\r\n  }\r\n\r\n  if (loggedIn)\r\n    return <Redirect to=\"/hacker-list\" />\r\n  else\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n        <div className=\"whiteFont\">\r\n          <div className=\"marAuto\" id=\"f\" >\r\n            <div className=\"text-center sheet--padding-bottom\">\r\n              <h4 className=\"alpha text-weight--bold \"><b>Login to HackerRank</b></h4>\r\n              <p>Don't have any account? <a rel=\"nofollow\" href=\"/register\">Register</a></p>\r\n            </div>\r\n            <div className=\"form\">\r\n              <form onSubmit={login}>\r\n\r\n                <div className=\"maxWidth marAuto\">\r\n                  <div className=\"\">\r\n                    <div className=\"form-group marginTop marginBottom\">\r\n                      <label>Username</label>\r\n                      <input onChange={(e) => setUsername(e.target.value)} autoFocus=\"autofocus\" className=\"form-control js-validate-field-on-blur\" required=\"required\" type=\"text\" name=\"username\" />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"marginBottom\">\r\n                    <div className=\"form-group\">\r\n                      <label >Password</label>\r\n                      <input onChange={(e) => setPassword(e.target.value)} className=\"form-control\" type=\"password\" name=\"password\" />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"form-group text-center\" id=\"s\">\r\n                    <button className=\"btn btn-lg btn-primary\" type=\"submit\">\r\n                      Login\r\n                        </button>\r\n                  </div>\r\n\r\n                </div>\r\n              </form>\r\n              {error && <div className=\"error\">\r\n                {errorMsg}\r\n              </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect, Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Nav from '../Navbar/Nav'\r\n\r\nfunction Register() {\r\n  let [username, setUsername] = useState(\"\")\r\n  let [password, setPassword] = useState(\"\")\r\n  let [email, setEmail] = useState(\"\")\r\n  let [ph, setPh] = useState(\"\")\r\n  let [registered, setRegistered] = useState(false)\r\n\r\n  const register = (f) => {\r\n    f.preventDefault()\r\n    console.log(\"ada\", f)\r\n    const user = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n      ph: ph\r\n    }\r\n    axios.post(\"http://localhost:3001/register\", user)\r\n      .then(res => {\r\n        console.log(\"user posted\")\r\n        return setRegistered(true)\r\n\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  if (registered)\r\n    return <Redirect to=\"/login\" />\r\n  else\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n        <div className=\"whiteFont\">\r\n\r\n          <div className=\"\" id=\"h\">\r\n            <div className=\"\">\r\n              <h4 className=\"alpha text-weight--bold\">Join HackerRank</h4>\r\n              <p>Already have an account? <a rel=\"nofollow\" href=\"/login\">Login</a></p>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"form\" id=\"f\">\r\n            <form onSubmit={(e) => { register(e) }}>\r\n              <div className=\"maxWidth marAuto\">\r\n                <div className=\"\">\r\n                  <div className=\"form-group marginTop marginBottom\">\r\n                    <label >\r\n                      Email address\r\n</label>\r\n                    <input onChange={(e) => setEmail(e.target.value)} className=\"form-control js-validate-field-on-blur\" required=\"required\" type=\"email\" name=\"email\" id=\"user_email\" />\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"\">\r\n                  <div className=\"form-group marginBottom\">\r\n                    <label >\r\n                      Username <span className=\"text-secondary\">(only letters, numbers, and underscores)</span>\r\n                    </label>\r\n                    <input onChange={(e) => setUsername(e.target.value)} className=\"form-control js-validate-field-on-blur\" pattern=\"[a-zA-Z0-9_]*[a-zA-Z][a-zA-Z0-9_]*\" required=\"required\" type=\"text\" name=\"username\" id=\"user_username\" />\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                  <div className=\"form-group marginBottom\">\r\n                    <label >\r\n                      Password <span className=\"text-secondary\">(min. 6 char)</span>\r\n                    </label>\r\n                    <input onChange={(e) => setPassword(e.target.value)} autoComplete=\"off\" minLength=\"6\" className=\"form-control js-validate-field-on-blur\" required=\"required\" type=\"password\" name=\"password\" id=\"user_password\" />\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"\">\r\n                  <div className=\"form-group marginBottom\">\r\n                    <label >\r\n                      Phone Number\r\n    </label>\r\n                    <input onChange={(e) => setPh(e.target.value)} autoComplete=\"off\" minLength=\"6\" className=\"form-control js-validate-field-on-blur\" required=\"required\" type=\"tel\" name=\"ph\" id=\"phone\" />\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"\">\r\n                  <div className=\"form-group\">\r\n                    <button className=\"btn btn-lg btn-primary\" name=\"veg\" type=\"submit\">\r\n                      SUBMIT\r\n          </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction UserProfile(props) {\r\n\r\n    let userImg = props.img;\r\n    let userName = props.name;\r\n    let id = props.id;\r\n    let userRank = props.rank\r\n\r\n    return (\r\n        <div>\r\n            <div key={id} className=\"\">\r\n\r\n                <div className=\"thumbnail\">\r\n                    <h4>\r\n                        {userName}\r\n                    </h4>\r\n                    <img src={userImg} className=\"maxImgHeightWidth\"/>\r\n                    <div className=\"caption\">\r\n\r\n                        <h4>\r\n                            Rank-  {userRank}\r\n                        </h4>\r\n                        <p>\r\n                            <a href={`/hacker/${id}`} className=\"btn btn-primary\">More Info</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Nav from '../Navbar/Nav'\r\nimport { Redirect } from 'react-router-dom'\r\nimport UserProfile from '../UserProfile/UserProfile'\r\n\r\nfunction HackersList() {\r\n    let [hackerList, setHackerList] = useState(false)\r\n    let [top3HackerList, setTop3HackerList] = useState(false)\r\n    let [authenticate, setAuthenticate] = useState(true)\r\n    let [userLogIn, setUserLogIn] = useState(localStorage.getItem('loggedIn'))\r\n    let [username, setUserName] = useState(localStorage.getItem('userName'))\r\n\r\n    /* useEffect hook to fetch data on initial load*/\r\n    useEffect(() => {\r\n        fetchHackerList()\r\n        fetchTop3Hackers()\r\n    }, [])\r\n\r\n    /*Function to make api call to load top 3 hackers using limit 3 in api call*/\r\n    const fetchTop3Hackers = () => {\r\n        let token = localStorage.getItem('token')\r\n        let body = {\r\n            limit: 3\r\n        }\r\n        axios.post(\"http://localhost:3001/hackers/topHackers\", body,\r\n            {\r\n                headers: {\r\n                    'authentication': token\r\n                }\r\n            }\r\n        )\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.data === \"not authenticated\" || response.data.name === \"JsonWebTokenError\") {\r\n                    setAuthenticate(false)\r\n                }\r\n                else {\r\n                    setTop3HackerList(response.data);\r\n                    setAuthenticate(true);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    /*Function to make api call to load all hacker's data*/\r\n    const fetchHackerList = () => {\r\n        let token = localStorage.getItem('token')\r\n        axios.get(\"http://localhost:3001/hackers\",\r\n            {\r\n                headers: {\r\n                    'authentication': token\r\n                }\r\n            }\r\n        )\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.data === \"not authenticated\" || response.data.name === \"JsonWebTokenError\") {\r\n                    setAuthenticate(false)\r\n                }\r\n                else {\r\n                    setHackerList(response.data);\r\n                    setAuthenticate(true);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    if (!authenticate) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    else\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                {userLogIn ?\r\n                    <div className=\"\">\r\n                        <div className=\"header\">Our Top Hackers</div>\r\n                        <div className=\"flexRowSpcEvn\">\r\n                            {top3HackerList && top3HackerList?.map((topHacker, index) =>\r\n                                <div className=\"marAuto\">\r\n                                    <div className={`whiteBackground pointerCursor marginBottom`}>\r\n                                        <img className={`userProfileImg  circleImg`} src={topHacker.profileLink} />\r\n                                        <div className={`userInfoContainer grow`}>\r\n                                            <a className={`title`} href={`/hacker/${topHacker._id}`}>{topHacker.name}</a>\r\n                                            <div className={`subTitle`}>{topHacker.overallRank}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"grid-container pagePadding\" >\r\n                            {hackerList && hackerList?.map((hacker, index) =>\r\n                                <UserProfile\r\n                                    name={hacker.name}\r\n                                    img={hacker.profileLink}\r\n                                    id={hacker._id}\r\n                                    rank={hacker.overallRank}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    : <Redirect to=\"/login\" />}\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default HackersList\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport Nav from '../Navbar/Nav'\r\n\r\nfunction HackerDetail() {\r\n\tconst { id } = useParams()\r\n\tlet [hackerId, setHackerId] = useState(id)\r\n\tlet [hackerData, setHackerData] = useState(false)\r\n\tlet [userLogIn, setUserLogIn] = useState(localStorage.getItem('loggedIn'))\r\n\tlet [username, setUserName] = useState(localStorage.getItem('userName'))\r\n\tlet [authenticate, setAuthenticate] = useState(true)\r\n\r\n\t/* useEffect hook to fetch data on initial load*/\r\n\tuseEffect(() => {\r\n\t\tmakeNetworkCall()\r\n\t}, [])\r\n\r\n    /*Function to make api call to load single hacker's data using user id*/\r\n\tconst makeNetworkCall = () => {\r\n\t\tlet token = localStorage.getItem('token')\r\n\t\taxios.get(`http://localhost:3001/hacker/${hackerId}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'authentication': token\r\n\t\t\t}\r\n\t\t}).\r\n\t\t\tthen(response => {\r\n\t\t\t\tif (response.data === \"not authenticated\") {\r\n\t\t\t\t\tsetAuthenticate(false)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetHackerData(response.data)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\r\n\tif (!authenticate) {\r\n\t\treturn <Redirect to=\"/login\" />\r\n\t}\r\n\telse\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Nav />\r\n\t\t\t\t{userLogIn ?\r\n\t\t\t\t\thackerData &&\r\n\t\t\t\t\t<div className=\"pagePadding maxWidth marginTop marginAuto\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t\t\t\t<p className=\"title\">\r\n\t\t\t\t\t\t\t\t\t{hackerData.name}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item minHeight \" >Location {hackerData.location}</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item minHeight\">Education- {hackerData.education}</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item minHeight\">Overall Rank- {hackerData.overallRank}</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item minHeight\" >Followers- {hackerData.followers}</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item minHeight\">Following- {hackerData.following}</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item minHeight\">Challenges Solved- {hackerData.challengesSolved}</li>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t<div className=\"boxStyle\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"boxImgSize pagePadding\" src={hackerData.profileLink} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"caption-full\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"pull-right\">\r\n\t\t\t\t\t\t\t\t\t\t</h4>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <Redirect to=\"/login\" />}\r\n\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n}\r\n\r\nexport default HackerDetail\r\n","import axios from 'axios'\r\n\r\nconst authProvider = {\r\n    // authentication\r\n    login: ({ username, password }) => {\r\n        const request = new Request('http://localhost:3001/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password,admin:true}),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n        return fetch(request)\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                } \r\n                return response.json();\r\n            })\r\n            .then(auth => {\r\n                localStorage.setItem('token', auth.token);\r\n                localStorage.setItem('auth', JSON.stringify(auth));\r\n                localStorage.setItem('permissions', auth.token);\r\n            })\r\n            .catch(() => {\r\n                throw new Error('Network error')\r\n            });\r\n    },\r\n    checkError: (error) => {\r\n        const status = error.status;\r\n        if (status === 401 || status === 403) {\r\n            localStorage.removeItem('auth');\r\n            return Promise.reject();\r\n        }\r\n        // other error code (404, 500, etc): no need to log out\r\n        return Promise.resolve();\r\n    },\r\n    checkAuth: () => {\r\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('auth');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('permissions');\r\n        return Promise.resolve();\r\n    },\r\n    getIdentity: () => {\r\n        try {\r\n            const { user} = JSON.parse(localStorage.getItem('auth'));\r\n            let userId=user._id;\r\n            let username=user.username\r\n            return Promise.resolve({ userId, username });\r\n        } catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n    },\r\n    // authorization\r\n    getPermissions: () => {\r\n        const role = localStorage.getItem('permissions');\r\n        return role ? \r\n        Promise.resolve() \r\n        :\r\n         Promise.reject();\r\n    }\r\n};\r\n\r\nexport default authProvider;\r\n","import * as React from 'react';\r\nimport {\r\n    List,\r\n    Datagrid,\r\n    TextField,\r\n    EmailField,\r\n    NumberField,\r\n    Datefield,\r\n} from 'react-admin';\r\n\r\nconst userList = props => {\r\n    console.log(props)\r\n    return <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            <TextField source=\"location\" />\r\n            <TextField source=\"education\" />\r\n            <NumberField source=\"overallRank\" />\r\n            <NumberField source=\"followers\" />\r\n            <NumberField source=\"following\" />\r\n        </Datagrid>\r\n    </List>\r\n};\r\n\r\nexport default userList;","import { fetchUtils } from 'react-admin';\r\nimport { stringify } from 'query-string';\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:3001';\r\nconst httpClient = fetchUtils.fetchJson;\r\n\r\nexport default {\r\n    getList: (resource, params) => {\r\n        const { page, perPage } = params.pagination;\r\n        const { field, order } = params.sort;\r\n        \r\n        const url = `${apiUrl}/${resource}`;\r\n        let token = localStorage.getItem('token')\r\n        return axios.get(url, {\r\n            headers: {\r\n                'authentication': token\r\n            }\r\n        }\r\n        ).then(res => {\r\n            console.log({res})\r\n            let tempArr=[]\r\n            let data=res.data.map((singleData,ind)=>{\r\n\r\n                let tempObj={\r\n                    id:ind,\r\n                    name:singleData.name,\r\n                    location:singleData.location,\r\n                    education:singleData.education,\r\n                    overallRank:singleData.overallRank,\r\n                    followers:singleData.followers,\r\n                    following:singleData.following,\r\n                }\r\n               tempArr.push(tempObj)\r\n            })\r\n            return ({\r\n            data: tempArr,\r\n            total: data.length,\r\n        })}\r\n        );\r\n    },\r\n\r\n    getOne: (resource, params) =>\r\n        httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => ({\r\n            data: json,\r\n        })),\r\n\r\n    getMany: (resource, params) => {\r\n        const query = {\r\n            filter: JSON.stringify({ id: params.ids }),\r\n        };\r\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n        return httpClient(url).then(({ json }) => ({ data: json }));\r\n    },\r\n\r\n    getManyReference: (resource, params) => {\r\n        const { page, perPage } = params.pagination;\r\n        const { field, order } = params.sort;\r\n        const query = {\r\n            sort: JSON.stringify([field, order]),\r\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\r\n            filter: JSON.stringify({\r\n                ...params.filter,\r\n                [params.target]: params.id,\r\n            }),\r\n        };\r\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n\r\n        return httpClient(url).then(({ headers, json }) => ({\r\n            data: json,\r\n            total: parseInt(headers.get('content-range').split('/').pop(), 10),\r\n        }));\r\n    },\r\n\r\n    update: (resource, params) =>\r\n        httpClient(`${apiUrl}/${resource}/${params.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(params.data),\r\n        }).then(({ json }) => ({ data: json })),\r\n\r\n    updateMany: (resource, params) => {\r\n        const query = {\r\n            filter: JSON.stringify({ id: params.ids }),\r\n        };\r\n        return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(params.data),\r\n        }).then(({ json }) => ({ data: json }));\r\n    },\r\n\r\n    create: (resource, params) =>\r\n        httpClient(`${apiUrl}/${resource}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(params.data),\r\n        }).then(({ json }) => ({\r\n            data: { ...params.data, id: json.id },\r\n        })),\r\n\r\n    delete: (resource, params) =>\r\n        httpClient(`${apiUrl}/${resource}/${params.id}`, {\r\n            method: 'DELETE',\r\n        }).then(({ json }) => ({ data: json })),\r\n\r\n    deleteMany: (resource, params) => {\r\n        const query = {\r\n            filter: JSON.stringify({ id: params.ids }),\r\n        };\r\n        return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(params.data),\r\n        }).then(({ json }) => ({ data: json }));\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect, useParams, withRouter } from 'react-router-dom'\r\nimport Nav from '../Navbar/Nav'\r\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\r\n\r\n\r\nfunction Statistics() {\r\n\r\n    let [top10HackerData, setTop10HackerData] = useState(false)\r\n    let [updatedHackerDetail, setUpdatedHackerDetail] = useState(false)\r\n    let [CPPData, setCPPData] = useState(false)\r\n    let [authenticate, setAuthenticate] = useState(true)\r\n    let [deviceData, setDeviceData] = useState(false)\r\n    let [userLogIn, setUserLogIn] = useState(localStorage.getItem('loggedIn'))\r\n\r\n    /* useEffect hook to fetch data on initial load*/\r\n    useEffect(() => {\r\n        fetchTopHackers()\r\n        fetchHackerList()\r\n        fetchRecentlyUpdatedDetails()\r\n    }, [])\r\n\r\n\r\n    /*Function to map graph data for c++ graph and device distribution graph*/\r\n    const mapUserData = (userArr) => {\r\n        let tempArr = [0, 0, 0]\r\n        let cppArr = []\r\n        let usernameArr = []\r\n\r\n        userArr.sort(function (a, b) { return b.competitivePercentiles.cpp - a.competitivePercentiles.cpp; });\r\n        console.log(userArr)\r\n\r\n        userArr.map((singleUser, index) => {\r\n            if (singleUser.competitivePercentiles.deviceType === \"Laptop\")\r\n                tempArr[0]++;\r\n            else if (singleUser.competitivePercentiles.deviceType === \"Tablet\")\r\n                tempArr[1]++;\r\n            else if (singleUser.competitivePercentiles.deviceType === \"Mobile\")\r\n                tempArr[2]++;\r\n            usernameArr.push(singleUser.name)\r\n            cppArr.push(singleUser.competitivePercentiles.cpp)\r\n\r\n        })\r\n        const state = {\r\n            labels: ['Laptop', 'Tablet', 'Mobile'],\r\n            datasets: [\r\n                {\r\n                    label: 'Device Distribution Chart',\r\n                    backgroundColor: [\r\n                        '#B21F00',\r\n                        '#C9DE00',\r\n                        '#2FDE00',\r\n\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        '#501800',\r\n                        '#4B5000',\r\n                        '#175000',\r\n                    ],\r\n                    data: tempArr\r\n                }\r\n            ]\r\n        }\r\n\r\n        const cppData = {\r\n            labels: usernameArr,\r\n            datasets: [\r\n                {\r\n                    label: \"C++ dataset\",\r\n                    data: cppArr,\r\n                    fill: true,\r\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                    borderColor: \"white\",\r\n                    lineTension: 0.5,\r\n\r\n                }\r\n            ]\r\n        };\r\n        setCPPData(cppData)\r\n        setDeviceData(state)\r\n\r\n    }\r\n\r\n    /*Function to make api call to load recentely updated data*/\r\n    const fetchRecentlyUpdatedDetails = () => {\r\n        let token = localStorage.getItem('token')\r\n        axios.get(`http://localhost:3001/hackers/recentlyUpdated`, {\r\n            headers: {\r\n                'authentication': token\r\n            }\r\n        }).\r\n            then(response => {\r\n                if (response.data === \"not authenticated\") {\r\n                    setAuthenticate(false)\r\n                }\r\n                else {\r\n                    setUpdatedHackerDetail(response.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    /*Function to make api call to load all hacker's data*/\r\n    const fetchHackerList = () => {\r\n        let token = localStorage.getItem('token')\r\n        axios.get(\"http://localhost:3001/hackers\",\r\n            {\r\n                headers: {\r\n                    'authentication': token\r\n                }\r\n            }\r\n        )\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.data === \"not authenticated\" || response.data.name === \"JsonWebTokenError\") {\r\n                    setAuthenticate(false)\r\n                }\r\n                else {\r\n                    mapUserData(response.data);\r\n                    setAuthenticate(true);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    /*Function to make api call to load top 10 hackers usinh limit 10 in api call*/\r\n    const fetchTopHackers = () => {\r\n        let token = localStorage.getItem('token')\r\n        let body = {\r\n            limit: 10\r\n        }\r\n        axios.post(`http://localhost:3001/hackers/topHackers`, body, {\r\n            headers: {\r\n                'authentication': token\r\n            }\r\n        }).\r\n            then(response => {\r\n                if (response.data === \"not authenticated\") {\r\n                    setAuthenticate(false)\r\n                }\r\n                else {\r\n                    setTop10HackerData(response.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    if (!authenticate) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    else\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                {userLogIn ?\r\n                    <div>\r\n                        <div className=\"header\">\r\n                            Top Hackers\r\n                    </div>\r\n                        <div className=\"grid-container pagePadding\">\r\n                            {top10HackerData && top10HackerData?.map((topHacker, index) =>\r\n                                <div className=\"marAuto\">\r\n                                    <div className={`whiteBackground pointerCursor marginBottom`}>\r\n                                        <img className={`userProfileImg  circleImg`} src={topHacker.profileLink} />\r\n                                        <div className={`userInfoContainer grow`}>\r\n                                            <a className={`title`} href={`/hacker/${topHacker._id}`}>{topHacker.name}</a>\r\n                                            <div className={`subTitle`}>{topHacker.overallRank}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n                        <div className=\"\">{deviceData &&\r\n                            <div className=\"graphWidth marAuto marginBottom\"><Pie\r\n                                data={deviceData}\r\n                                options={{\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'Device Distribution',\r\n                                        fontSize: 40,\r\n                                        fontColor: 'white',\r\n                                    },\r\n                                    legend: {\r\n                                        labels: {\r\n                                            fontColor: \"white\",\r\n                                            fontSize: 18\r\n                                        },\r\n                                        display: true,\r\n                                        position: 'right'\r\n                                    }\r\n                                }}\r\n                            /></div>}\r\n\r\n                            {\r\n                                CPPData &&\r\n                                <div className=\"graphWidth marAuto marginBottom\"><Line\r\n                                    data={CPPData}\r\n                                    scaleFontColor='red'\r\n                                    options={{\r\n                                        scaleFontColor: 'red',\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: 'CPP Distribution',\r\n                                            fontSize: 40,\r\n                                            fontColor: 'white',\r\n                                        },\r\n                                        legend: {\r\n                                            labels: {\r\n                                                fontColor: \"white\",\r\n                                                fontSize: 18\r\n                                            },\r\n\r\n                                            display: true,\r\n                                            position: 'right'\r\n                                        },\r\n\r\n                                    }}\r\n\r\n                                />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            updatedHackerDetail &&\r\n                            <div>\r\n                                <div className=\"header\">\r\n                                    Latest Updated Hackers Data\r\n                                </div>\r\n                                <div className=\"col2 pagePadding gridgap1\">\r\n                                    {updatedHackerDetail && updatedHackerDetail?.map((latestUpdated, index) =>\r\n                                        <div className=\"backgroundWhite\">\r\n                                            <div className={`pointerCursor pagePadding`}>\r\n                                                <div className={`col2 grow`}>\r\n                                                    <a className={`title`} href={`/hacker/${latestUpdated._id}`}>{latestUpdated.name}</a>\r\n                                                    <div className={`subTitle`}>Rank- {latestUpdated.overallRank}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                    :\r\n                    <Redirect to=\"/login\" />}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Statistics\r\n","import * as React from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home/home'\r\nimport Login from './components/Forms/Login'\r\nimport Register from './components/Forms/Register'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport HackersList from './components/HackerList/HackersList';\r\nimport HackerDetail from './components/HackerDetails/HackerDetail';\r\nimport { Admin, Resource } from 'react-admin';\r\nimport authProvider from './services/authProvider';\r\nimport userList from './services/userList';\r\nimport dataProvider from './services/dataProvider';\r\nimport Statistics from './components/Statistics/Statistics';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n\r\n      <Router>\r\n        <div className=\"App\">\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hacker-list\" exact component={HackersList} />\r\n            <Route path=\"/hacker/statistics\" exact component={Statistics} />\r\n            <Route path=\"/hacker/:id\" exact component={HackerDetail} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n            <Route path=\"/admin-panel\" exact>\r\n              <Admin\r\n                title=\"HackerRank Admin Panel\"\r\n                dataProvider={dataProvider}\r\n                authProvider={authProvider}\r\n              >{(auth) =>\r\n                [\r\n                  <Resource name=\"hackers\" list={userList} />\r\n                ]\r\n                }\r\n              </Admin>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}